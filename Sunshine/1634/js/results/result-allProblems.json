{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Dependency analysis",
  "type": "Check dependency licenses",
  "tags": [
    "direct dependencies",
    "unrecognized licenses"
  ],
  "severity": "High",
  "comment": "'@fortawesome/fontawesome-free' ('6.4.2') 'OFL-1.1-no-RFN' is not in the allowed or the prohibited licenses lists with project license 'GPL-3.0-only'",
  "detailsInfo": "Check dependencies licenses for possible problems: missing or prohibited licenses, or other compliance issues",
  "sources": [
    {
      "type": "file",
      "path": "package.json",
      "language": "JSON",
      "line": 1,
      "offset": 1,
      "length": 0,
      "code": {
        "startLine": 1,
        "length": 0,
        "offset": 0,
        "surroundingCode": "{\n  \"dependencies\": {\n    \"@fortawesome/fontawesome-free\": \"6.4.2\","
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "CheckDependencyLicenses",
    "baselineState": "new"
  },
  "hash": "5c0270e28dbc7d918350cf8a6bd840785129cbb038b2d127ba670944ba27d679"
},{
  "tool": "Code Inspection",
  "category": "Probable bugs",
  "type": "Equality operator may cause type coercion",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "High",
  "comment": "Comparison x.indexOf(this.logFilter) != -1 may cause unexpected type coercion",
  "detailsInfo": "Reports a usage of an equality operator that may cause unexpected type coercions. Suggests replacing `==` and `!=` with type-safe equality operators `===` and `!==`.\n\nDepending on the option selected, one of the following cases will be reported:\n\n* All usages of `==` and `!=` operators.\n* All usages except comparison with null. Some code styles allow using `x == null` as a replacement for `x === null || x === undefined`.\n* Only suspicious expressions, such as: `==` or `!=` comparisons with `0`, `''`, `null`, `true`, `false`, or `undefined`.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/troubleshooting.html",
      "language": "ECMAScript 6",
      "line": 100,
      "offset": 35,
      "length": 31,
      "code": {
        "startLine": 98,
        "length": 31,
        "offset": 122,
        "surroundingCode": "        if(!this.logFilter)return this.logs;\n        let lines = this.logs.split(\"\\n\");\n        lines = lines.filter(x => x.indexOf(this.logFilter) != -1);\n        return lines.join(\"\\n\");\n      }"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSEqualityComparisonWithCoercion",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "2ea945753ba7b22b504f179324047495d86b7dafac49bad0593e725ce1f96581"
},{
  "tool": "Code Inspection",
  "category": "Probable bugs",
  "type": "Equality operator may cause type coercion",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "High",
  "comment": "Comparison r.status == 200 may cause unexpected type coercion",
  "detailsInfo": "Reports a usage of an equality operator that may cause unexpected type coercions. Suggests replacing `==` and `!=` with type-safe equality operators `===` and `!==`.\n\nDepending on the option selected, one of the following cases will be reported:\n\n* All usages of `==` and `!=` operators.\n* All usages except comparison with null. Some code styles allow using `x == null` as a replacement for `x === null || x === undefined`.\n* Only suspicious expressions, such as: `==` or `!=` comparisons with `0`, `''`, `null`, `true`, `false`, or `undefined`.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/welcome.html",
      "language": "ECMAScript 6",
      "line": 86,
      "offset": 15,
      "length": 15,
      "code": {
        "startLine": 84,
        "length": 15,
        "offset": 71,
        "surroundingCode": "        }).then((r) => {\n          this.loading = false;\n          if (r.status == 200) {\n            r.json().then((rj) => {\n              if (rj.status.toString() === \"true\") {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSEqualityComparisonWithCoercion",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "311106cb1a81c4a5e355dc1ae659086ec4dcd335686a2fb2f5742e44597828b5"
},{
  "tool": "Code Inspection",
  "category": "Probable bugs",
  "type": "Equality operator may cause type coercion",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "High",
  "comment": "Comparison r.status == 200 may cause unexpected type coercion",
  "detailsInfo": "Reports a usage of an equality operator that may cause unexpected type coercions. Suggests replacing `==` and `!=` with type-safe equality operators `===` and `!==`.\n\nDepending on the option selected, one of the following cases will be reported:\n\n* All usages of `==` and `!=` operators.\n* All usages except comparison with null. Some code styles allow using `x == null` as a replacement for `x === null || x === undefined`.\n* Only suspicious expressions, such as: `==` or `!=` comparisons with `0`, `''`, `null`, `true`, `false`, or `undefined`.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/apps.html",
      "language": "ECMAScript 6",
      "line": 510,
      "offset": 15,
      "length": 15,
      "code": {
        "startLine": 508,
        "length": 15,
        "offset": 86,
        "surroundingCode": "          body: JSON.stringify(this.editForm),\n        }).then((r) => {\n          if (r.status == 200) document.location.reload();\n        });\n      },"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSEqualityComparisonWithCoercion",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "42f6008e41121b9af45eadeda659fbdad78fa91e64d238113bb4cc6907d6dc8d"
},{
  "tool": "Code Inspection",
  "category": "Probable bugs",
  "type": "Equality operator may cause type coercion",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "High",
  "comment": "Comparison r.status == 200 may cause unexpected type coercion",
  "detailsInfo": "Reports a usage of an equality operator that may cause unexpected type coercions. Suggests replacing `==` and `!=` with type-safe equality operators `===` and `!==`.\n\nDepending on the option selected, one of the following cases will be reported:\n\n* All usages of `==` and `!=` operators.\n* All usages except comparison with null. Some code styles allow using `x == null` as a replacement for `x === null || x === undefined`.\n* Only suspicious expressions, such as: `==` or `!=` comparisons with `0`, `''`, `null`, `true`, `false`, or `undefined`.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/apps.html",
      "language": "ECMAScript 6",
      "line": 409,
      "offset": 17,
      "length": 15,
      "code": {
        "startLine": 407,
        "length": 15,
        "offset": 107,
        "surroundingCode": "        if (resp) {\n          fetch(\"/api/apps/\" + id, { method: \"DELETE\" }).then((r) => {\n            if (r.status == 200) document.location.reload();\n          });\n        }"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSEqualityComparisonWithCoercion",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "673f013f84a12d4de8210c2923899ff3ce8842178ab77c8ab5e97098f2f11286"
},{
  "tool": "Code Inspection",
  "category": "Probable bugs",
  "type": "Equality operator may cause type coercion",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "High",
  "comment": "Comparison r.status == 200 may cause unexpected type coercion",
  "detailsInfo": "Reports a usage of an equality operator that may cause unexpected type coercions. Suggests replacing `==` and `!=` with type-safe equality operators `===` and `!==`.\n\nDepending on the option selected, one of the following cases will be reported:\n\n* All usages of `==` and `!=` operators.\n* All usages except comparison with null. Some code styles allow using `x == null` as a replacement for `x === null || x === undefined`.\n* Only suspicious expressions, such as: `==` or `!=` comparisons with `0`, `''`, `null`, `true`, `false`, or `undefined`.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/password.html",
      "language": "ECMAScript 6",
      "line": 103,
      "offset": 15,
      "length": 15,
      "code": {
        "startLine": 101,
        "length": 15,
        "offset": 90,
        "surroundingCode": "          body: JSON.stringify(this.passwordData),\n        }).then((r) => {\n          if (r.status == 200) {\n            r.json().then((rj) => {\n              if (rj.status.toString() === \"true\") {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSEqualityComparisonWithCoercion",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "ef799edc2f33fd8c1795767c1d09f7e698c11b310adc9b3ac2e2506bde7b16e0"
},{
  "tool": "Code Inspection",
  "category": "Unused symbols",
  "type": "Unused local symbol",
  "tags": [
    "JavaScript"
  ],
  "severity": "High",
  "comment": "Unused local variable i",
  "detailsInfo": "Reports an unused locally accessible parameter, local variable, function, class, or private member declaration.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/apps.html",
      "language": "JavaScript",
      "line": 284,
      "offset": 33,
      "length": 1,
      "code": {
        "startLine": 282,
        "length": 1,
        "offset": 76,
        "surroundingCode": "                </div>\n                <div\n                  v-for=\"(cover,i) in coverCandidates\"\n                  :key=\"'i'\"\n                  class=\"col-12 col-sm-6 col-lg-4 mb-3\""
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSUnusedLocalSymbols",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "942ddf431492b26f67fbba6784c410fe74982b5bcb3e5a14fc3698c6f8cefc59"
},{
  "tool": "Code Inspection",
  "category": "Unused symbols",
  "type": "Unused local symbol",
  "tags": [
    "JavaScript"
  ],
  "severity": "High",
  "comment": "Unused parameter $event",
  "detailsInfo": "Reports an unused locally accessible parameter, local variable, function, class, or private member declaration.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/apps.html",
      "language": "JavaScript",
      "line": 425,
      "offset": 23,
      "length": 6,
      "code": {
        "startLine": 423,
        "length": 6,
        "offset": 81,
        "surroundingCode": "        this.editForm[\"prep-cmd\"].push(template);\n      },\n      showCoverFinder($event) {\n        this.coverCandidates = [];\n        this.coverSearching = true;"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSUnusedLocalSymbols",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "f65244a2193051ec772373d6b93d4b34d74d5409d6f5e1ae8b3432a22c87893b"
},{
  "tool": "Code Inspection",
  "category": "Unused symbols",
  "type": "Unused local symbol",
  "tags": [
    "JavaScript"
  ],
  "severity": "High",
  "comment": "Unused local variable app",
  "detailsInfo": "Reports an unused locally accessible parameter, local variable, function, class, or private member declaration.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/config.html",
      "language": "JavaScript",
      "line": 1183,
      "offset": 15,
      "length": 3,
      "code": {
        "startLine": 1181,
        "length": 3,
        "offset": 63,
        "surroundingCode": "          this.platform = this.config.platform;\n\n          var app = document.getElementById(\"app\");\n          if (this.platform === \"windows\") {\n            this.tabs = this.tabs.filter((el) => {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSUnusedLocalSymbols",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "fb6abcb4658481562d4bd58dbcb797304d0674d7ef7a1988f873fb33723159a6"
},{
  "tool": "Code Inspection",
  "category": "RegExp",
  "type": "Regular expression can be simplified",
  "tags": [
    "RegExp"
  ],
  "severity": "Moderate",
  "comment": "'[d]' can be simplified to 'd'",
  "detailsInfo": "Reports regular expressions that can be simplified.\n\n**Example:**\n\n\n      [a] xx* [ah-hz]\n\nAfter the quick-fix is applied:\n\n\n      a x+ [ahz]\n\nNew in 2022.1",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/config.html",
      "language": "RegExp",
      "line": 1251,
      "offset": 33,
      "length": 4,
      "code": {
        "startLine": 1249,
        "length": 4,
        "offset": 123,
        "surroundingCode": "          let delete_value = false\n          if (key === \"resolutions\" || key === \"fps\") {\n            let regex = /([\\d]+x[\\d]+)/g\n            // Use a regular expression to find each value and replace it with a quoted version\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "RegExpSimplifiable",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "44be87784e963389a10b90f13e58f3c974a748f808c9a9bbe3f98152bd2dcce8"
},{
  "tool": "Code Inspection",
  "category": "RegExp",
  "type": "Regular expression can be simplified",
  "tags": [
    "RegExp"
  ],
  "severity": "Moderate",
  "comment": "'[d]' can be simplified to 'd'",
  "detailsInfo": "Reports regular expressions that can be simplified.\n\n**Example:**\n\n\n      [a] xx* [ah-hz]\n\nAfter the quick-fix is applied:\n\n\n      a x+ [ahz]\n\nNew in 2022.1",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/config.html",
      "language": "RegExp",
      "line": 1251,
      "offset": 27,
      "length": 4,
      "code": {
        "startLine": 1249,
        "length": 4,
        "offset": 117,
        "surroundingCode": "          let delete_value = false\n          if (key === \"resolutions\" || key === \"fps\") {\n            let regex = /([\\d]+x[\\d]+)/g\n            // Use a regular expression to find each value and replace it with a quoted version\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "RegExpSimplifiable",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "bb6acb36ca4dcb184be5eabe60a233a16ff1a9565bd213c375177f7fde5fdd31"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/welcome.html",
      "language": "ECMAScript 6",
      "line": 63,
      "offset": 7,
      "length": 3,
      "code": {
        "startLine": 61,
        "length": 3,
        "offset": 16,
        "surroundingCode": "\n<script>\n  new Vue({\n    el: \"#app\",\n    data() {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "1799378d3698253e5fdfc0f773e6146d0832858cea978c0bd6c00a801297017a"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/apps.html",
      "language": "ECMAScript 6",
      "line": 347,
      "offset": 7,
      "length": 3,
      "code": {
        "startLine": 345,
        "length": 3,
        "offset": 13,
        "surroundingCode": "  });\n\n  new Vue({\n    el: \"#app\",\n    data() {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "1d551ecdde80d38635f688bf782465afa283ca8ee15fc5e5b9d52ab0520375a7"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/troubleshooting.html",
      "language": "ECMAScript 6",
      "line": 82,
      "offset": 7,
      "length": 3,
      "code": {
        "startLine": 80,
        "length": 3,
        "offset": 16,
        "surroundingCode": "\n<script>\n  new Vue({\n    el: \"#app\",\n    data() {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "2db10966539311450a37f0e400c401a5ab6330aa252598911d29cada01182d10"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/password.html",
      "language": "ECMAScript 6",
      "line": 81,
      "offset": 7,
      "length": 3,
      "code": {
        "startLine": 79,
        "length": 3,
        "offset": 16,
        "surroundingCode": "\n<script>\n  new Vue({\n    el: \"#app\",\n    data() {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "49307d35a8edd871a9267718c7d14cb32269e2bf8c76827af7c70a8667189d4b"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/index.html",
      "language": "ECMAScript 6",
      "line": 78,
      "offset": 7,
      "length": 3,
      "code": {
        "startLine": 76,
        "length": 3,
        "offset": 16,
        "surroundingCode": "\n<script>\n  new Vue({\n    el: \"#content\",\n    data() {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "509877bd587b0ad2b8a40dead2a2377a7e5bba9233e31bd99459ac75a2211595"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/config.html",
      "language": "ECMAScript 6",
      "line": 1114,
      "offset": 7,
      "length": 3,
      "code": {
        "startLine": 1112,
        "length": 3,
        "offset": 11,
        "surroundingCode": "  }\n\n  new Vue({\n    el: \"#app\",\n    data() {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "e60440c7a524a02979a6a0164f0d9f8230e772bff959874fa186666d84759a83"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/apps.html",
      "language": "ECMAScript 6",
      "line": 341,
      "offset": 3,
      "length": 3,
      "code": {
        "startLine": 339,
        "length": 3,
        "offset": 18,
        "surroundingCode": "</div>\n<script>\n  Vue.directive('dropdown-show', {\n    bind: function (el, binding) {\n      el.addEventListener('show.bs.dropdown', binding.value);"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "f9f40798407d5d3b81bace2d24b587bf18f15dc5321e3e43c731e432254793ee"
}]}