{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "RegExp",
  "type": "Regular expression can be simplified",
  "tags": [
    "RegExp"
  ],
  "severity": "Moderate",
  "comment": "'[d]' can be simplified to 'd'",
  "detailsInfo": "Reports regular expressions that can be simplified.\n\n**Example:**\n\n\n      [a] xx* [ah-hz]\n\nAfter the quick-fix is applied:\n\n\n      a x+ [ahz]\n\nNew in 2022.1",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/config.html",
      "language": "RegExp",
      "line": 1073,
      "offset": 27,
      "length": 4,
      "code": {
        "startLine": 1071,
        "length": 4,
        "offset": 117,
        "surroundingCode": "          let delete_value = false\n          if (key === \"resolutions\" || key === \"fps\") {\n            let regex = /([\\d]+x[\\d]+)/g\n            // Use a regular expression to find each value and replace it with a quoted version\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "RegExpSimplifiable",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "4b253d46e61fe3c6aa37895e440639bc2a1f09f6712f869ec16656466b11bc9e"
},{
  "tool": "Code Inspection",
  "category": "RegExp",
  "type": "Regular expression can be simplified",
  "tags": [
    "RegExp"
  ],
  "severity": "Moderate",
  "comment": "'[d]' can be simplified to 'd'",
  "detailsInfo": "Reports regular expressions that can be simplified.\n\n**Example:**\n\n\n      [a] xx* [ah-hz]\n\nAfter the quick-fix is applied:\n\n\n      a x+ [ahz]\n\nNew in 2022.1",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/config.html",
      "language": "RegExp",
      "line": 1073,
      "offset": 33,
      "length": 4,
      "code": {
        "startLine": 1071,
        "length": 4,
        "offset": 123,
        "surroundingCode": "          let delete_value = false\n          if (key === \"resolutions\" || key === \"fps\") {\n            let regex = /([\\d]+x[\\d]+)/g\n            // Use a regular expression to find each value and replace it with a quoted version\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "RegExpSimplifiable",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "b5da98c74184289006006fea293809cc9db5d4740512425c575c788d6ea767be"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Missed locally stored library for HTTP link",
  "tags": [
    "Vue"
  ],
  "severity": "High",
  "comment": "Missed locally stored library for HTTP link",
  "detailsInfo": "Reports a URL of an external JavaScript library that is not associated with any locally stored file. Suggests downloading the library. Such association enables the IDE to provide proper code completion and navigation.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/header.html",
      "language": "Vue",
      "line": 74,
      "offset": 14,
      "length": 47,
      "code": {
        "startLine": 72,
        "length": 47,
        "offset": 46,
        "surroundingCode": "\n<!-- Discord WidgetBot Crate-->\n<script src=\"https://cdn.jsdelivr.net/npm/@widgetbot/crate@3\" async defer>\n  new Crate({\n    server: '804382334370578482',"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSUnresolvedLibraryURL",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "88a75850d894c21357521bb8be08220cdeaa66f713765045a7f6d5ff9d7e464c"
},{
  "tool": "Code Inspection",
  "category": "Unused symbols",
  "type": "Unused local symbol",
  "tags": [
    "JavaScript"
  ],
  "severity": "High",
  "comment": "Unused local variable app",
  "detailsInfo": "Reports an unused locally accessible parameter, local variable, function, class, or private member declaration.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/config.html",
      "language": "JavaScript",
      "line": 1008,
      "offset": 15,
      "length": 3,
      "code": {
        "startLine": 1006,
        "length": 3,
        "offset": 94,
        "surroundingCode": "          this.restart_supported = (this.config.restart_supported === \"true\");\n\n          var app = document.getElementById(\"app\");\n          if (this.platform === \"windows\") {\n            this.tabs = this.tabs.filter((el) => {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSUnusedLocalSymbols",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "0fa289fb3815da44729b7690658cc98976e5ec74f3a1c22b861e9554eb652a66"
},{
  "tool": "Code Inspection",
  "category": "Unused symbols",
  "type": "Unused local symbol",
  "tags": [
    "JavaScript"
  ],
  "severity": "High",
  "comment": "Unused parameter $event",
  "detailsInfo": "Reports an unused locally accessible parameter, local variable, function, class, or private member declaration.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/apps.html",
      "language": "JavaScript",
      "line": 299,
      "offset": 23,
      "length": 6,
      "code": {
        "startLine": 297,
        "length": 6,
        "offset": 43,
        "surroundingCode": "        });\n      },\n      showCoverFinder($event) {\n        this.coverCandidates = [];\n        this.coverSearching = true;"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSUnusedLocalSymbols",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "20d2f3a45cf7f703abba18c8f604f8b246ce2f2eaee38dba9cb5baff56f0ecb6"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/config.html",
      "language": "ECMAScript 6",
      "line": 938,
      "offset": 7,
      "length": 3,
      "code": {
        "startLine": 936,
        "length": 3,
        "offset": 11,
        "surroundingCode": "  }\n\n  new Vue({\n    el: \"#app\",\n    data() {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "e2040b0c84c01e5daf2862487bf3e048f8a25d0280b19e4d132ccce8a4161a4e"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/apps.html",
      "language": "ECMAScript 6",
      "line": 233,
      "offset": 3,
      "length": 3,
      "code": {
        "startLine": 231,
        "length": 3,
        "offset": 12,
        "surroundingCode": "\n<script>\n  Vue.directive('dropdown-show', {\n    bind: function (el, binding) {\n      el.addEventListener('show.bs.dropdown', binding.value);"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "33abf415ad4b42d20052566ea1683196379142e6506142ed2f039baba85421ca"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/apps.html",
      "language": "ECMAScript 6",
      "line": 239,
      "offset": 7,
      "length": 3,
      "code": {
        "startLine": 237,
        "length": 3,
        "offset": 13,
        "surroundingCode": "  });\n\n  new Vue({\n    el: \"#app\",\n    data() {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "1c21946945d6d4c7ac2c4a02023f4274e99a65ed2dcd8c9a418a8e2bcd1a6a5e"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/index.html",
      "language": "ECMAScript 6",
      "line": 78,
      "offset": 7,
      "length": 3,
      "code": {
        "startLine": 76,
        "length": 3,
        "offset": 16,
        "surroundingCode": "\n<script>\n  new Vue({\n    el: \"#content\",\n    data() {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "79aee610eb2e3afe380f6f7af77f3729c97da45536a4cb8df668fb5e6d71ff98"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/welcome.html",
      "language": "ECMAScript 6",
      "line": 63,
      "offset": 7,
      "length": 3,
      "code": {
        "startLine": 61,
        "length": 3,
        "offset": 16,
        "surroundingCode": "\n<script>\n  new Vue({\n    el: \"#app\",\n    data() {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "ba3c1c6a0135d9664d035bc384942da084942a54e86b7c602a913776bf9bf87c"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/password.html",
      "language": "ECMAScript 6",
      "line": 81,
      "offset": 7,
      "length": 3,
      "code": {
        "startLine": 79,
        "length": 3,
        "offset": 16,
        "surroundingCode": "\n<script>\n  new Vue({\n    el: \"#app\",\n    data() {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "c26c4b51e1f5b113730ecb5a8b4ffad24e9323780acaa06f5b2ca0e36693e3f1"
},{
  "tool": "Code Inspection",
  "category": "TypeScript",
  "type": "Referenced UMD global variable",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "Moderate",
  "comment": "Referenced UMD global variable",
  "detailsInfo": "Reports a usage of a Universal Module Definition (UMD) global variable if the current file is a module (ECMAScript or CommonJS). Referencing UMD variables without explicit imports can lead to a runtime error if the library isn't included implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/troubleshooting.html",
      "language": "ECMAScript 6",
      "line": 85,
      "offset": 7,
      "length": 3,
      "code": {
        "startLine": 83,
        "length": 3,
        "offset": 16,
        "surroundingCode": "\n<script>\n  new Vue({\n    el: \"#app\",\n    data() {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "TypeScriptUMDGlobal",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "64ae49e877968b019d55bd8beba32bf42398a9a9db6455a2e2a383b6a049ee74"
},{
  "tool": "Code Inspection",
  "category": "Probable bugs",
  "type": "Equality operator may cause type coercion",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "High",
  "comment": "Comparison r.status == 200 may cause unexpected type coercion",
  "detailsInfo": "Reports a usage of an equality operator that may cause unexpected type coercions. Suggests replacing `==` and `!=` with type-safe equality operators `===` and `!==`.\n\nDepending on the option selected, one of the following cases will be reported:\n\n* All usages of `==` and `!=` operators.\n* All usages except comparison with null. Some code styles allow using `x == null` as a replacement for `x === null || x === undefined`.\n* Only suspicious expressions, such as: `==` or `!=` comparisons with `0`, `''`, `null`, `true`, `false`, or `undefined`.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/apps.html",
      "language": "ECMAScript 6",
      "line": 289,
      "offset": 17,
      "length": 15,
      "code": {
        "startLine": 287,
        "length": 15,
        "offset": 107,
        "surroundingCode": "        if (resp) {\n          fetch(\"/api/apps/\" + id, { method: \"DELETE\" }).then((r) => {\n            if (r.status == 200) document.location.reload();\n          });\n        }"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSEqualityComparisonWithCoercion",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "af5366aba40ee12fbe8cf692ccebff53bc5a99c2c67bafbaa83a919be5b24d73"
},{
  "tool": "Code Inspection",
  "category": "Probable bugs",
  "type": "Equality operator may cause type coercion",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "High",
  "comment": "Comparison r.status == 200 may cause unexpected type coercion",
  "detailsInfo": "Reports a usage of an equality operator that may cause unexpected type coercions. Suggests replacing `==` and `!=` with type-safe equality operators `===` and `!==`.\n\nDepending on the option selected, one of the following cases will be reported:\n\n* All usages of `==` and `!=` operators.\n* All usages except comparison with null. Some code styles allow using `x == null` as a replacement for `x === null || x === undefined`.\n* Only suspicious expressions, such as: `==` or `!=` comparisons with `0`, `''`, `null`, `true`, `false`, or `undefined`.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/apps.html",
      "language": "ECMAScript 6",
      "line": 384,
      "offset": 15,
      "length": 15,
      "code": {
        "startLine": 382,
        "length": 15,
        "offset": 86,
        "surroundingCode": "          body: JSON.stringify(this.editForm),\n        }).then((r) => {\n          if (r.status == 200) document.location.reload();\n        });\n      },"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSEqualityComparisonWithCoercion",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "a2b1b29fd0f130246d3e5b8fd05993fa613e9fe4c918b16c3c67428b4741fcc0"
},{
  "tool": "Code Inspection",
  "category": "Probable bugs",
  "type": "Equality operator may cause type coercion",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "High",
  "comment": "Comparison r.status == 200 may cause unexpected type coercion",
  "detailsInfo": "Reports a usage of an equality operator that may cause unexpected type coercions. Suggests replacing `==` and `!=` with type-safe equality operators `===` and `!==`.\n\nDepending on the option selected, one of the following cases will be reported:\n\n* All usages of `==` and `!=` operators.\n* All usages except comparison with null. Some code styles allow using `x == null` as a replacement for `x === null || x === undefined`.\n* Only suspicious expressions, such as: `==` or `!=` comparisons with `0`, `''`, `null`, `true`, `false`, or `undefined`.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/welcome.html",
      "language": "ECMAScript 6",
      "line": 86,
      "offset": 15,
      "length": 15,
      "code": {
        "startLine": 84,
        "length": 15,
        "offset": 71,
        "surroundingCode": "        }).then((r) => {\n          this.loading = false;\n          if (r.status == 200) {\n            r.json().then((rj) => {\n              if (rj.status.toString() === \"true\") {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSEqualityComparisonWithCoercion",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "8d28438c8499fa4de61de6f64df95f51c2208ce51cd23c11d7a344ce2610d2ec"
},{
  "tool": "Code Inspection",
  "category": "Probable bugs",
  "type": "Equality operator may cause type coercion",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "High",
  "comment": "Comparison r.status == 200 may cause unexpected type coercion",
  "detailsInfo": "Reports a usage of an equality operator that may cause unexpected type coercions. Suggests replacing `==` and `!=` with type-safe equality operators `===` and `!==`.\n\nDepending on the option selected, one of the following cases will be reported:\n\n* All usages of `==` and `!=` operators.\n* All usages except comparison with null. Some code styles allow using `x == null` as a replacement for `x === null || x === undefined`.\n* Only suspicious expressions, such as: `==` or `!=` comparisons with `0`, `''`, `null`, `true`, `false`, or `undefined`.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/password.html",
      "language": "ECMAScript 6",
      "line": 103,
      "offset": 15,
      "length": 15,
      "code": {
        "startLine": 101,
        "length": 15,
        "offset": 90,
        "surroundingCode": "          body: JSON.stringify(this.passwordData),\n        }).then((r) => {\n          if (r.status == 200) {\n            r.json().then((rj) => {\n              if (rj.status.toString() === \"true\") {"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSEqualityComparisonWithCoercion",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "6114058378c08149b02ee125edcfbdddee9c1abf49945d18e7197ddb02694725"
},{
  "tool": "Code Inspection",
  "category": "Probable bugs",
  "type": "Equality operator may cause type coercion",
  "tags": [
    "ECMAScript 6"
  ],
  "severity": "High",
  "comment": "Comparison x.indexOf(this.logFilter) != -1 may cause unexpected type coercion",
  "detailsInfo": "Reports a usage of an equality operator that may cause unexpected type coercions. Suggests replacing `==` and `!=` with type-safe equality operators `===` and `!==`.\n\nDepending on the option selected, one of the following cases will be reported:\n\n* All usages of `==` and `!=` operators.\n* All usages except comparison with null. Some code styles allow using `x == null` as a replacement for `x === null || x === undefined`.\n* Only suspicious expressions, such as: `==` or `!=` comparisons with `0`, `''`, `null`, `true`, `false`, or `undefined`.",
  "sources": [
    {
      "type": "file",
      "path": "src_assets/common/assets/web/troubleshooting.html",
      "language": "ECMAScript 6",
      "line": 105,
      "offset": 35,
      "length": 31,
      "code": {
        "startLine": 103,
        "length": 31,
        "offset": 122,
        "surroundingCode": "        if(!this.logFilter)return this.logs;\n        let lines = this.logs.split(\"\\n\");\n        lines = lines.filter(x => x.indexOf(this.logFilter) != -1);\n        return lines.join(\"\\n\");\n      }"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "JSEqualityComparisonWithCoercion",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "0f5484418333102a82a52c6416eb1083420b23df7c1bf562b5b7f978c799fd63"
},{
  "tool": "Code Inspection",
  "category": "Dependency analysis",
  "type": "Check dependency licenses",
  "tags": [
    "JSON"
  ],
  "severity": "High",
  "comment": "'@fortawesome/fontawesome-free' ('6.3.0') 'OFL-1.1-no-RFN' is not in the allowed or the prohibited licenses lists with project license 'PROPRIETARY-LICENSE'",
  "detailsInfo": "Check dependencies licenses for possible problems: missing or prohibited licenses, or other compliance issues",
  "sources": [
    {
      "type": "file",
      "path": "package.json",
      "language": "JSON",
      "line": 1,
      "offset": 1,
      "length": 120,
      "code": {
        "startLine": 1,
        "length": 120,
        "offset": 0,
        "surroundingCode": "{\n  \"dependencies\": {\n    \"@fortawesome/fontawesome-free\": \"6.3.0\",\n    \"bootstrap\": \"5.2.3\",\n    \"vue\": \"2.6.12\"\n  }\n}\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "CheckDependencyLicenses",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "b424d61ef6598da907346e60ee568bb97ba36fefd427e0ce75cdaec645ab0f8d"
}]}